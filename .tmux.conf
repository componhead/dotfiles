##############################
#  _
# | |_ _ __ ___  _   ___  __
# | __| '_ ` _ \| | | \ \/ /
# | |_| | | | | | |_| |>  < 
#  \__|_| |_| |_|\__,_/_/\_\
#
#############################
############################################################################
# Reset Prefix
############################################################################
set -g prefix C-a
bind-key a send-prefix # for nested tmux sessions
 
############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000
 
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"

## COLOUR (Solarized dark)

# default window title colors
set-window-option -g window-status-fg colour33
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour40
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235
set-option -g pane-active-border-fg colour46

# message text
set-option -g message-bg colour235
set-option -g message-fg colour196

# pane number display
set-option -g display-panes-active-colour colour20
set-option -g display-panes-colour colour40

# clock
set-window-option -g clock-mode-colour colour40
 
# utf8 support
#set-window-option -g utf8 on
 
# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
setw -g window-status-current-attr reverse

# window notifications
setw -g monitor-activity on
set -g visual-activity on
 
# Automatically set window title
#setw -g automatic-rename
 
############################################################################
# Status Bar
############################################################################
#set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[bg=black]#[fg=white]Â» #[fg=white,bold]#T#[default]'
set-option -g status-right-length 30
set-option -g status-right '#[fg=white,bold]#[fg=cyan] #[fg=white,bold]###S #[fg=white,italic]%R %a %d/%m/%y '
 
# Titles (window number, program name, active (or not)
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T'
# window titles
set-window-option -g window-status-current-format '#[fg=green,bold][#{window_index} #[fg=green]#{pane_current_command} #[fg=green]#(pwd="#{pane_current_path}"]; echo ${pwd####*/})'
set-window-option -g window-status-format '#[fg=colour244,bold][#{window_index} #[fg=colour244]#{pane_current_command} #[fg=colour244]#(pwd="#{pane_current_path}]"; echo ${pwd####*/})'
 
#set inactive/active window styles
set -g window-style 'fg=colour234,bg=colour16'
set -g window-active-style 'fg=colour245,bg=colour233'

## set the pane border colors 
#set -g pane-border-fg colour250
#set -g pane-border-bg colour236
#set -g pane-active-border-fg colour250 
#set -g pane-active-border-bg colour250
#set -s escape-time 0

set-option -g mouse on

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50
 
############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
#unbind j
unbind C-b # unbind default leader key
#unbind '"' # unbind horizontal split
#unbind %   # unbind vertical split
 
 
############################################################################
# Bindings
############################################################################
# reload tmux conf
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"
bind-key c new-window -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
 
############################################################################
# windows
############################################################################
bind-key C-a last-window # C-a C-a for last active window
bind A command-prompt "rename-window %%"
# By default, all windows in a session are constrained to the size of the 
# smallest client connected to that session, 
# even if both clients are looking at different windows. 
# It seems that in this particular case, Screen has the better default 
# where a window is only constrained in size if a smaller client 
# is actively looking at it.
setw -g aggressive-resize on
 
############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
 
# Resizing ---------------------------------------------------------------
bind-key C-h resize-pane -L
bind-key C-j resize-pane -D
bind-key C-k resize-pane -U
bind-key C-l resize-pane -R
 
# focus on first window
# select-window -t 0

# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-logging'

# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
set -g focus-events

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace $CPCLIPBOARD"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace $CPCLIPBOARD"

set -g default-shell $SHELL 

run-shell '~/.tmux/plugins/tpm/tpm'
